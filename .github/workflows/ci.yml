name: CI

on:
  pull_request:
    branches:
      - main

jobs:
  enforce-branch-model:
    name: Enforce Branch Model
    runs-on: ubuntu-latest

    steps:
      - name: Check Branch Rules
        run: |
          BRANCH_NAME="${{ github.head_ref }}"
          BASE_BRANCH="${{ github.base_ref }}"
          echo "Source Branch: $BRANCH_NAME"
          echo "Target Branch: $BASE_BRANCH"
          if [[ "$BASE_BRANCH" == "main" && ! "$BRANCH_NAME" =~ ^feature/ ]]; then
            echo "❌ Only 'feature/*' branches can be merged into 'main'"
            exit 1
          fi
          echo "✅ Branch merging is allowed."
  build:
    name: Build and Test
    runs-on: ubuntu-latest
    needs: enforce-branch-model

    steps:
      - name: Checkout Source Code
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: 'stable'
          cache: true

      - name: Build
        env:
          GOPROXY: "https://proxy.golang.org"
        run: go build -v ./...

      - name: Run Tests with Coverage
        run: |
          go test -coverprofile=coverage.out -v ./...
          coverage=$(go tool cover -func=coverage.out | grep total | awk '{print substr($3, 1, length($3)-1)}')
          echo "Total Coverage: $coverage%"
    
          min_coverage=70.0
          if (( $(echo "$coverage < $min_coverage" | bc -l) )); then
            echo "Test coverage is below ${min_coverage}%. Failing the workflow."
            exit 1
          fi

      - name: Check Formatting using go fmt
        run: |
          unformatted=$(gofmt -s -l .)
          if [[ -n "$unformatted" ]]; then
            echo "Code is not formatted. Run 'gofmt -s -w .' to fix."
            echo "$unformatted"
            exit 1
          fi
